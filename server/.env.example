# Supabase configurations
SUPABASE_URL=''
SUPABASE_KEY=''
SUPABASE_JWT_SECRET=''

# Server Domain Configurations
BACKEND_URL=''
REDIRECT_URL=''

# --- General Settings ---
PROJECT_NAME="XAutoFlow Fintech Agent"
API_V1_STR="/api/v1"
ENVIRONMENT="development" # development, staging, production
LOG_LEVEL="INFO"

# --- LLM & Embedding Configuration ---
# Specify the LLM provider ('openai', 'azure', 'anthropic', 'ollama', etc.)
LLM_PROVIDER="openai"
# Provide necessary API keys and base URLs depending on the provider
OPENAI_API_KEY="your_openai_api_key_here"
# AZURE_OPENAI_ENDPOINT="your_azure_openai_endpoint"
# AZURE_OPENAI_API_KEY="your_azure_openai_api_key"
# ANTHROPIC_API_KEY="your_anthropic_api_key_here"
# OLLAMA_BASE_URL="http://localhost:11434" # If using Ollama locally

# Specify the main LLM model name (ensure compatibility with provider)
LLM_MODEL_NAME="gpt-4o"
# LLM_MODEL_NAME="gpt-3.5-turbo"
# LLM_MODEL_NAME="claude-3-opus-20240229"
# LLM_MODEL_NAME="llama3" # If using Ollama

# Specify the embedding model (ensure compatibility with provider/LlamaIndex)
EMBEDDING_MODEL_PROVIDER="openai" # or 'huggingface', 'ollama', etc.
EMBEDDING_MODEL_NAME="text-embedding-3-small"
# EMBEDDING_MODEL_NAME="BAAI/bge-small-en-v1.5" # Example HuggingFace model
# EMBEDDING_MODEL_NAME="nomic-embed-text" # Example Ollama model

# --- Database Configuration (PostgreSQL Example) ---
# Use postgresql+asyncpg for async connection with SQLAlchemy
DATABASE_URL="postgresql+asyncpg://user:password@host:port/dbname"
# Example: DATABASE_URL="postgresql+asyncpg://postgres:mysecretpassword@localhost:5432/xautoflow"

# --- LlamaIndex Configuration ---
# Directory to store LlamaIndex index data and ingested documents
PERSIST_DIR="./storage"
# Directory containing documents to be indexed
DOCUMENTS_DIR="./knowledge_base"
CHUNK_SIZE=512
CHUNK_OVERLAP=50

# --- Autogen Configuration ---
# Optional: Configuration for Autogen agents if needed beyond LLM config
# AUTOGEN_CONFIG_LIST='[{"model": "gpt-4o", "api_key": "your_openai_api_key_here"}]'

# --- Security ---
# Generate a strong secret key (e.g., using `openssl rand -hex 32`)
SECRET_KEY="your_strong_secret_key_here"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# --- CORS ---
# Comma-separated list of allowed origins
# Use "*" for allowing all origins (less secure, suitable for development)
BACKEND_CORS_ORIGINS="http://localhost:8000,http://localhost:3000" # Example for local dev

# --- Tool Specific Settings ---
# Example: Max results for web search
WEB_SEARCH_MAX_RESULTS=5
# Example: Allowed directories for file I/O (comma-separated)
ALLOWED_FILE_DIRS="./output,/tmp/safe_zone"